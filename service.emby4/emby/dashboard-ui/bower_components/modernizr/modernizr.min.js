/*! modernizr 3.6.0 (Custom Build) | MIT *
 * https://modernizr.com/download/?-cssanimations-csstransforms-csstransitions-objectfit-setclasses !*/
!function (e, n, t) { function r(e, n) { return typeof e === n } function s() { var e, n, t, s, o, i, a; for (var l in C) if (C.hasOwnProperty(l)) { if (e = [], n = C[l], n.name && (e.push(n.name.toLowerCase()), n.options && n.options.aliases && n.options.aliases.length)) for (t = 0; t < n.options.aliases.length; t++)e.push(n.options.aliases[t].toLowerCase()); for (s = r(n.fn, "function") ? n.fn() : n.fn, o = 0; o < e.length; o++)i = e[o], a = i.split("."), 1 === a.length ? Modernizr[a[0]] = s : (!Modernizr[a[0]] || Modernizr[a[0]] instanceof Boolean || (Modernizr[a[0]] = new Boolean(Modernizr[a[0]])), Modernizr[a[0]][a[1]] = s), x.push((s ? "" : "no-") + a.join("-")) } } function o(e) { var n = _.className, t = Modernizr._config.classPrefix || ""; if (w && (n = n.baseVal), Modernizr._config.enableJSClass) { var r = new RegExp("(^|\\s)" + t + "no-js(\\s|$)"); n = n.replace(r, "$1" + t + "js$2") } Modernizr._config.enableClasses && (n += " " + t + e.join(" " + t), w ? _.className.baseVal = n : _.className = n) } function i(e, n) { return !!~("" + e).indexOf(n) } function a(e) { return e.replace(/([a-z])-([a-z])/g, function (e, n, t) { return n + t.toUpperCase() }).replace(/^-/, "") } function l() { return "function" != typeof n.createElement ? n.createElement(arguments[0]) : w ? n.createElementNS.call(n, "http://www.w3.org/2000/svg", arguments[0]) : n.createElement.apply(n, arguments) } function f(e, n) { return function () { return e.apply(n, arguments) } } function u(e, n, t) { var s; for (var o in e) if (e[o] in n) return t === !1 ? e[o] : (s = n[e[o]], r(s, "function") ? f(s, t || n) : s); return !1 } function c(e) { return e.replace(/([A-Z])/g, function (e, n) { return "-" + n.toLowerCase() }).replace(/^ms-/, "-ms-") } function d(n, t, r) { var s; if ("getComputedStyle" in e) { s = getComputedStyle.call(e, n, t); var o = e.console; if (null !== s) r && (s = s.getPropertyValue(r)); else if (o) { var i = o.error ? "error" : "log"; o[i].call(o, "getComputedStyle returning null, its possible modernizr test results are inaccurate") } } else s = !t && n.currentStyle && n.currentStyle[r]; return s } function p() { var e = n.body; return e || (e = l(w ? "svg" : "body"), e.fake = !0), e } function m(e, t, r, s) { var o, i, a, f, u = "modernizr", c = l("div"), d = p(); if (parseInt(r, 10)) for (; r--;)a = l("div"), a.id = s ? s[r] : u + (r + 1), c.appendChild(a); return o = l("style"), o.type = "text/css", o.id = "s" + u, (d.fake ? d : c).appendChild(o), d.appendChild(c), o.styleSheet ? o.styleSheet.cssText = e : o.appendChild(n.createTextNode(e)), c.id = u, d.fake && (d.style.background = "", d.style.overflow = "hidden", f = _.style.overflow, _.style.overflow = "hidden", _.appendChild(d)), i = t(c, e), d.fake ? (d.parentNode.removeChild(d), _.style.overflow = f, _.offsetHeight) : c.parentNode.removeChild(c), !!i } function v(n, r) { var s = n.length; if ("CSS" in e && "supports" in e.CSS) { for (; s--;)if (e.CSS.supports(c(n[s]), r)) return !0; return !1 } if ("CSSSupportsRule" in e) { for (var o = []; s--;)o.push("(" + c(n[s]) + ":" + r + ")"); return o = o.join(" or "), m("@supports (" + o + ") { #modernizr { position: absolute; } }", function (e) { return "absolute" == d(e, null, "position") }) } return t } function g(e, n, s, o) { function f() { c && (delete j.style, delete j.modElem) } if (o = r(o, "undefined") ? !1 : o, !r(s, "undefined")) { var u = v(e, s); if (!r(u, "undefined")) return u } for (var c, d, p, m, g, y = ["modernizr", "tspan", "samp"]; !j.style && y.length;)c = !0, j.modElem = l(y.shift()), j.style = j.modElem.style; for (p = e.length, d = 0; p > d; d++)if (m = e[d], g = j.style[m], i(m, "-") && (m = a(m)), j.style[m] !== t) { if (o || r(s, "undefined")) return f(), "pfx" == n ? m : !0; try { j.style[m] = s } catch (h) { } if (j.style[m] != g) return f(), "pfx" == n ? m : !0 } return f(), !1 } function y(e, n, t, s, o) { var i = e.charAt(0).toUpperCase() + e.slice(1), a = (e + " " + E.join(i + " ") + i).split(" "); return r(n, "string") || r(n, "undefined") ? g(a, n, s, o) : (a = (e + " " + P.join(i + " ") + i).split(" "), u(a, n, t)) } function h(e, n, r) { return y(e, t, t, n, r) } var C = [], S = { _version: "3.6.0", _config: { classPrefix: "", enableClasses: 0, enableJSClass: 0, usePrefixes: 0 }, _q: [], on: function (e, n) { var t = this; setTimeout(function () { n(t[e]) }, 0) }, addTest: function (e, n, t) { C.push({ name: e, fn: n, options: t }) }, addAsyncTest: function (e) { C.push({ name: null, fn: e }) } }, Modernizr = function () { }; Modernizr.prototype = S, Modernizr = new Modernizr; var x = [], _ = n.documentElement, w = "svg" === _.nodeName.toLowerCase(), b = "Moz O ms Webkit", E = S._config.usePrefixes ? b.split(" ") : []; S._cssomPrefixes = E; var P = S._config.usePrefixes ? b.toLowerCase().split(" ") : []; S._domPrefixes = P; var T = { elem: l("modernizr") }; Modernizr._q.push(function () { delete T.elem }); var j = { style: T.elem.style }; Modernizr._q.unshift(function () { delete j.style }), S.testAllProps = y, S.testAllProps = h, Modernizr.addTest("csstransitions", h("transition", "all", !0)), Modernizr.addTest("cssanimations", h("animationName", "a", !0)), Modernizr.addTest("csstransforms", function () { return -1 === navigator.userAgent.indexOf("Android 2.") && h("transform", "scale(1)", !0) }); var z = function (n) { var r, s = prefixes.length, o = e.CSSRule; if ("undefined" == typeof o) return t; if (!n) return !1; if (n = n.replace(/^@/, ""), r = n.replace(/-/g, "_").toUpperCase() + "_RULE", r in o) return "@" + n; for (var i = 0; s > i; i++) { var a = prefixes[i], l = a.toUpperCase() + "_" + r; if (l in o) return "@-" + a.toLowerCase() + "-" + n } return !1 }; S.atRule = z; var N = S.prefixed = function (e, n, t) { return 0 === e.indexOf("@") ? z(e) : (-1 != e.indexOf("-") && (e = a(e)), n ? y(e, n, t) : y(e, "pfx")) }; Modernizr.addTest("objectfit", !!N("objectFit"), { aliases: ["object-fit"] }), s(), o(x), delete S.addTest, delete S.addAsyncTest; for (var A = 0; A < Modernizr._q.length; A++)Modernizr._q[A](); e.Modernizr = Modernizr }(window, document);